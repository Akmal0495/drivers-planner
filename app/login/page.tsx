"use client";

import { useState } from "react";
import { supabase } from "../../lib/supabaseClient";
import { useRouter } from "next/navigation";

export default function LoginPage() {
  const router = useRouter();
  const [loading, setLoading] = useState(false);

  // üîπ –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏–Ω–∞
  async function handleLogin(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    setLoading(true);

    const form = e.currentTarget;
    const email = (form.elements.namedItem("email") as HTMLInputElement).value;
    const password = (form.elements.namedItem("password") as HTMLInputElement).value;

    const { data, error } = await supabase.auth.signInWithPassword({
      email,
      password,
    });

    setLoading(false);

    if (error) {
      alert(error.message);
    } else {
      router.push("/profile");
    }
  }

  // üîπ –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  async function handleRegister(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();

    const form = e.currentTarget;
    const email = (form.elements.namedItem("email") as HTMLInputElement).value;
    const password = (form.elements.namedItem("password") as HTMLInputElement).value;

    // 1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data, error } = await supabase.auth.signUp({
      email,
      password,
    });

    if (error) {
      alert(error.message);
      return;
    }

    // 2. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É Profiles
    if (data.user) {
      const { error: insertError } = await supabase
        .from("Profiles")
        .insert([
          {
            id: data.user.id,
            email: data.user.email,
            role: "driver", // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–¥–∏—Ç–µ–ª—å
          },
        ]);

      if (insertError) {
        console.error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", insertError);
      }
    }

    alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å –ø–æ—á—Ç—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.");
  }

  return (
    <div style={{ maxWidth: "400px", margin: "50px auto" }}>
      <h2>–í—Ö–æ–¥</h2>
      <form onSubmit={handleLogin}>
        <input name="email" type="email" placeholder="Email" required />
        <br />
        <input name="password" type="password" placeholder="–ü–∞—Ä–æ–ª—å" required />
        <br />
        <button type="submit" disabled={loading}>
          –í–æ–π—Ç–∏
        </button>
      </form>

      <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
      <form onSubmit={handleRegister}>
        <input name="email" type="email" placeholder="Email" required />
        <br />
        <input name="password" type="password" placeholder="–ü–∞—Ä–æ–ª—å" required />
        <br />
        <button type="submit" disabled={loading}>
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </button>
      </form>
    </div>
  );
}
