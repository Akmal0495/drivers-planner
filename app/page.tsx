"use client";

import React, { useState } from "react";
import { Calendar, momentLocalizer } from "react-big-calendar";
import moment from "moment";
import "react-big-calendar/lib/css/react-big-calendar.css";

const localizer = momentLocalizer(moment);

export default function Page() {
  const [trips, setTrips] = useState([
    {
      id: 1,
      driver: "–ò–≤–∞–Ω–æ–≤",
      route: "–î—É—à–∞–Ω–±–µ ‚Üí –•–æ—Ä–æ–≥",
      start: new Date(2025, 8, 11, 10, 0),
      end: new Date(2025, 8, 11, 14, 0),
      status: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ",
    },
  ]);

  const [newTrip, setNewTrip] = useState({
    driver: "",
    route: "",
    start: "",
    end: "",
    status: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ",
  });

  const addTrip = () => {
    if (!newTrip.driver || !newTrip.route || !newTrip.start || !newTrip.end) {
      alert("–ó–∞–ø–æ–ª–Ω–∏ –≤—Å–µ –ø–æ–ª—è!");
      return;
    }

    setTrips([
      ...trips,
      {
        ...newTrip,
        id: trips.length + 1,
        start: new Date(newTrip.start),
        end: new Date(newTrip.end),
      },
    ]);

    setNewTrip({ driver: "", route: "", start: "", end: "", status: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ" });
  };

  // üé® –¶–≤–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
  const eventStyleGetter = (event: any) => {
    let backgroundColor = "#888"; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–µ—Ä—ã–π
    if (event.status === "–í –ø—É—Ç–∏") backgroundColor = "#0070f3";
    if (event.status === "–ó–∞–≤–µ—Ä—à–µ–Ω–æ") backgroundColor = "#21ba45";
    if (event.status === "–û—Ç–º–µ–Ω–µ–Ω–æ") backgroundColor = "#db2828";

    return {
      style: {
        backgroundColor,
        borderRadius: "5px",
        color: "white",
        padding: "2px 5px",
      },
    };
  };

  return (
    <div style={{ padding: 20 }}>
      <h1 style={{ fontSize: "24px", fontWeight: "bold" }}>üöó –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ–µ–∑–¥–æ–∫ –≤–æ–¥–∏—Ç–µ–ª–µ–π</h1>

      {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å */}
      <Calendar
  localizer={localizer}
  events={trips.map((trip) => ({
    ...trip,
    title: `${trip.driver} ‚Äî ${trip.route} [${trip.status}]`,
  }))}
  startAccessor="start"
  endAccessor="end"
  style={{ height: 500, marginTop: 20 }}
  defaultView="week"
  views={["month", "week", "day"]}
  eventPropGetter={eventStyleGetter}
  onSelectEvent={(event) => {
    const newStatus = prompt(
      `–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ–µ–∑–¥–∫–∏:\n1 - –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ\n2 - –í –ø—É—Ç–∏\n3 - –ó–∞–≤–µ—Ä—à–µ–Ω–æ\n4 - –û—Ç–º–µ–Ω–µ–Ω–æ`,
      event.status
    );

    if (newStatus) {
      let statusText = event.status;
      if (newStatus === "1") statusText = "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ";
      if (newStatus === "2") statusText = "–í –ø—É—Ç–∏";
      if (newStatus === "3") statusText = "–ó–∞–≤–µ—Ä—à–µ–Ω–æ";
      if (newStatus === "4") statusText = "–û—Ç–º–µ–Ω–µ–Ω–æ";

      setTrips(
        trips.map((trip) =>
          trip.id === event.id ? { ...trip, status: statusText } : trip
        )
      );
    }
  }}
/>


      {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
      <div
        style={{
          marginTop: 30,
          padding: 20,
          border: "1px solid #ccc",
          borderRadius: 10,
          maxWidth: 400,
        }}
      >
        <h2>–î–æ–±–∞–≤–∏—Ç—å –ø–æ–µ–∑–¥–∫—É</h2>
        <input
          type="text"
          placeholder="–ò–º—è –≤–æ–¥–∏—Ç–µ–ª—è"
          value={newTrip.driver}
          onChange={(e) => setNewTrip({ ...newTrip, driver: e.target.value })}
          style={{ width: "100%", marginBottom: 10, padding: 8 }}
        />
        <input
          type="text"
          placeholder="–ú–∞—Ä—à—Ä—É—Ç (–æ—Ç–∫—É–¥–∞ ‚Üí –∫—É–¥–∞)"
          value={newTrip.route}
          onChange={(e) => setNewTrip({ ...newTrip, route: e.target.value })}
          style={{ width: "100%", marginBottom: 10, padding: 8 }}
        />
        <input
          type="datetime-local"
          value={newTrip.start}
          onChange={(e) => setNewTrip({ ...newTrip, start: e.target.value })}
          style={{ width: "100%", marginBottom: 10, padding: 8 }}
        />
        <input
          type="datetime-local"
          value={newTrip.end}
          onChange={(e) => setNewTrip({ ...newTrip, end: e.target.value })}
          style={{ width: "100%", marginBottom: 10, padding: 8 }}
        />
        <select
          value={newTrip.status}
          onChange={(e) => setNewTrip({ ...newTrip, status: e.target.value })}
          style={{ width: "100%", marginBottom: 10, padding: 8 }}
        >
          <option>–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</option>
          <option>–í –ø—É—Ç–∏</option>
          <option>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</option>
          <option>–û—Ç–º–µ–Ω–µ–Ω–æ</option>
        </select>
        <button
          onClick={addTrip}
          style={{
            width: "100%",
            padding: 10,
            backgroundColor: "#0070f3",
            color: "white",
            border: "none",
            borderRadius: 5,
          }}
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–µ–∑–¥–∫—É
        </button>
      </div>
    </div>
  );
}
